services:
  code-manager-backend:
    depends_on:
      - code-manager-database
    build:
      context: ./code-manager-backend
      dockerfile: dockerfile.prod
      args:
        - DATABASE_URL=${DATABASE_URL}
    image: code-manager-backend
    ports:
      - ${CODE_MANAGER_BACKEND_PORT}:${CODE_MANAGER_BACKEND_PORT}
    environment:
      - NODE_ENV=production
      - PORT=${CODE_MANAGER_BACKEND_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_TOKEN_EXPIRATION=${JWT_TOKEN_EXPIRATION}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - DATABASE_URL=${DATABASE_URL}
    restart: always
    networks:
      - code-manager-network
  code-manager-frontend:
    build:
      context: ./code-manager-frontend
      dockerfile: dockerfile
      args:
        - CODE_MANAGER_FRONTEND_PORT=${CODE_MANAGER_FRONTEND_PORT}
    image: code-manager-frontend
    ports:
      - ${CODE_MANAGER_FRONTEND_PORT}:${CODE_MANAGER_FRONTEND_PORT}
    environment:
      - URL_BACKEND=${URL_BACKEND}
      - NEXT_PUBLIC_URL_BACKEND=${NEXT_PUBLIC_URL_BACKEND}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - URL_FRONTEND=${URL_FRONTEND}
      - AUTH_SECRET=${AUTH_SECRET}
    restart: always
    networks:
      - code-manager-network
  code-manager-database:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - code-manager-data:/var/lib/postgresql/data
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - code-manager-network
networks:
  code-manager-network:
